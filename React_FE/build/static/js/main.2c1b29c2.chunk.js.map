{"version":3,"sources":["utilities.js","App.js","index.js"],"names":["labelMap","1","name","color","2","3","4","5","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","width","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke","App","webcamRef","useRef","canvasRef","runCoco","a","tf","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","img","fromPixels","resized","resizeBilinear","casted","cast","expanded","expandDims","executeAsync","obj","array","objectNumber","console","log","getContext","requestAnimationFrame","useEffect","className","ref","muted","style","position","marginLeft","marginRight","left","right","textAlign","zindex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c1b29c2.chunk.js","sourcesContent":["// Define our labelmap\r\nconst labelMap = {\r\n  1: { name: \"1\", color: \"red\" },\r\n  2: { name: \"2\", color: \"yellow\" },\r\n  3: { name: \"3\", color: \"lime\" },\r\n  4: { name: \"4\", color: \"blue\" },\r\n  5: { name: \"5\", color: \"black\" },\r\n};\r\n\r\n// Define a drawing function\r\nexport const drawRect = (\r\n  boxes,\r\n  classes,\r\n  scores,\r\n  threshold,\r\n  imgWidth,\r\n  imgHeight,\r\n  ctx\r\n) => {\r\n  for (let i = 0; i <= boxes.length; i++) {\r\n    if (boxes[i] && classes[i] && scores[i] > threshold) {\r\n      // Extract variables\r\n      const [y, x, height, width] = boxes[i];\r\n      const text = classes[i];\r\n\r\n      // Set styling\r\n      ctx.strokeStyle = labelMap[text][\"color\"];\r\n      ctx.lineWidth = 10;\r\n      ctx.fillStyle = \"white\";\r\n      ctx.font = \"30px Arial\";\r\n\r\n      // DRAW!!\r\n      ctx.beginPath();\r\n      ctx.fillText(\r\n        labelMap[text][\"name\"] + \" - \" + Math.round(scores[i] * 100) / 100,\r\n        x * imgWidth,\r\n        y * imgHeight - 10\r\n      );\r\n      ctx.rect(\r\n        x * imgWidth,\r\n        y * imgHeight,\r\n        (width * imgWidth) / 2,\r\n        (height * imgHeight) / 2\r\n      );\r\n      ctx.stroke();\r\n    }\r\n  }\r\n};\r\n","// Import dependencies\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { nextFrame } from \"@tensorflow/tfjs\";\r\n// 2. TODO - Import drawing utility here\r\nimport { drawRect } from \"./utilities\";\r\n\r\nfunction App() {\r\n  const webcamRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  // const navigate = useNavigate();\r\n\r\n  // Main function\r\n  const runCoco = async () => {\r\n    // 3. TODO - Load network\r\n    const net = await tf.loadGraphModel(\r\n      \"https://musuemtfod.s3.us-south.cloud-object-storage.appdomain.cloud/model.json\"\r\n    );\r\n\r\n    // Loop and detect hands\r\n    setInterval(() => {\r\n      detect(net);\r\n    }, 16.7);\r\n  };\r\n\r\n  const detect = async (net) => {\r\n    // Check data is available\r\n    if (\r\n      typeof webcamRef.current !== \"undefined\" &&\r\n      webcamRef.current !== null &&\r\n      webcamRef.current.video.readyState === 4\r\n    ) {\r\n      // Get Video Properties\r\n      const video = webcamRef.current.video;\r\n      const videoWidth = webcamRef.current.video.videoWidth;\r\n      const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n      // Set video width\r\n      webcamRef.current.video.width = videoWidth;\r\n      webcamRef.current.video.height = videoHeight;\r\n\r\n      // Set canvas height and width\r\n      canvasRef.current.width = videoWidth;\r\n      canvasRef.current.height = videoHeight;\r\n\r\n      // 4. TODO - Make Detections\r\n      const img = tf.browser.fromPixels(video);\r\n      const resized = tf.image.resizeBilinear(img, [640, 480]);\r\n      const casted = resized.cast(\"int32\");\r\n      const expanded = casted.expandDims(0);\r\n      const obj = await net.executeAsync(expanded);\r\n\r\n      const boxes = await obj[6].array();\r\n      const classes = await obj[1].array();\r\n      const scores = await obj[3].array();\r\n\r\n      // Main label detected\r\n      const confidence = 0.9;\r\n      if (scores[0][0] > confidence) {\r\n        const objectNumber = classes[0][0];\r\n        console.log(\"object \", objectNumber, \"score : \", scores[0][0]);\r\n        // navigate(\"/ObjectDescription\", { objectNumber });\r\n      }\r\n\r\n      // Draw mesh\r\n      const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n      // 5. TODO - Update drawing utility\r\n      // drawSomething(obj, ctx)\r\n      requestAnimationFrame(() => {\r\n        drawRect(\r\n          boxes[0],\r\n          classes[0],\r\n          scores[0],\r\n          0.7, //confidence\r\n          videoWidth,\r\n          videoHeight,\r\n          ctx\r\n        );\r\n      });\r\n\r\n      tf.dispose(img);\r\n      tf.dispose(resized);\r\n      tf.dispose(casted);\r\n      tf.dispose(expanded);\r\n      tf.dispose(obj);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    runCoco();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Webcam\r\n          ref={webcamRef}\r\n          muted={true}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 9,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            left: 0,\r\n            right: 0,\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: 640,\r\n            height: 480,\r\n          }}\r\n        />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}